https://towardsdatascience.com/building-a-data-science-startup-getting-into-data-science-2113ce2f4868?source=collection_category---4------3-----------------------
Building a Data Science Startup & Getting Into Data Science Sign in Data Science Machine Learning Programming Visualization AI Video About Contribute FULL PODCAST EPISODE: APPLE | GOOGLE | SPOTIFY | OTHER Building a Data Science Startup & Getting Into Data Science A podcast interview with SharpestMinds Cofounder, Jeremie Harris YK Sugi Follow Dec 2, 2019 · 10 min read The other day, I interviewed Jeremie Harris, a SharpestMinds cofounder, for the Towards Data Science podcast and YouTube channel. SharpestMinds is a startup that helps people who are looking for data science jobs by finding mentors for them. In my opinion, their system is interesting in a way that a mentor only gets paid when their mentee lands a data science job. I wanted to interview Jeremie because I had previously spoken to him on a different occasion, and I wanted to personally learn more about his story, as well as his thoughts on today’s data science job market. To listen to the whole episode instead, you can either check out our podcast or watch the interview on YouTube. Q: How did you get started with your startup? So, our whole team is former physicists. We all dropped out of grad school or finished grad school around the same time. We decided to go into startups, specifically with deep learning. For about a year and a half in 2015, my brother and I did this deep learning startup. It was a really stupid idea — we made a restaurant recommendation engine. It turned out, it was something nobody really wanted. But it was cool in a way that we got to learn a lot of infrastructure behind machine learning and deep learning. Eventually, we decided to pivot, and we basically decided to build a jobs board. We knew that a lot of people wanted to be in the machine learning space. It was pretty clear that we were reaching the kind of inflection point where things would go crazy. At that point, we started playing around with connecting companies to students. So, we would try to help a student land their first sort of gate role and do little projects. That’s how we went through YC. We did Y Combinator with that idea. Now, in this model, we would try to match a specific company to a specific candidate. In other words, it was a recruitment model. It’s basically like trying to be a recruiter. With this model, there was this problem that we couldn’t actually afford to care about any specific student or candidate. Instead, you’re playing the numbers. You’re throwing a whole bunch of people and a whole bunch of jobs together and hope something sticks. So, very quickly, we realized that what we wanted to do is be able to invest in people. We were always good at teaching, connecting with people, and understanding the ins-and-outs of the job market. We wanted to lean in that direction. That’s why we ultimately decided to take this mentorship direction with income share. We saw from job boards and stuff that everyone was missing the same kind of skills consistency. It was stuff like — it’s all well and good to have a Jupyter Notebook where you’re importing pandas and scikit-learn, but then how do you get to the next level — the level you need to be at to get hired? You need to look at things like deploying models in the cloud, a good git flow, and learn how to use tools like Docker. It’s this sort of software engineering side of thing that’s under-recognized in data science. That’s what companies tend to look for. We kept spotting these commonalities, and we thought, you know who’s going to actually be good at teaching this? The people who use data science in the real world — machine learning engineers and data scientists. So, we asked ourselves, how can we convince a data scientist to work with an aspiring data scientist today? That’s actually tough if you think about it. Data scientists get paid a lot. So, if you’re going to convince them to do this — spending a serious amount of time with a human being who’s not ready yet, you got to find a way to make it all fit. And income share was immediately the natural fit here — have people who are trying to break in trade on their future success. You might not be valuable today, but if you put a little bit of effort, if you get that mentorship, if you have somebody who’ll tell you where to focus your energy and time, all of a sudden you’ll unlock all this value. Whenever you have a situation like that, income share is a beautiful fit for that. That was kind of the origin of it. Q: Why did you go with this income-sharing model instead of building a bootcamp? Great question. We actually spent about 2 months thinking about if we should do a bootcamp. Is that a natural fit? And the reason we didn’t do it is ultimately a mix of economics and ethics. I want to take a step back and answer this by telling you a story of something that’s happened to me over the past few weeks. We started getting a lot of applications to be mentees from people who are TA’s at university master’s courses in data science, TA’s at bootcamps, and even a prof at a well-known university. We had basically all of these data science educators who were coming to us because they were struggling to break into the space. So, we kind of sat back and said, “This is a big ethical problem.” If you imagine people who are doing a bootcamp or master’s degree in data science, why are they doing it? It’s because they want to break in! But if their TA’s and profs are also trying to break in, it’s like the blind leading the blind. So, this was the situation we saw from outside. If you’re a data scientist, you make 150, 200, 250K if you have experience. If you’re a university professor, you’re making 100, 120K. It’s basically half the amount. So, if you’re good enough to be a data scientist, the question then has to be — why are you doing this and not data science if you’re that skilled? So for us, the question was, if you want to give a quality data science education, how do you convince people who are good enough to do it in the big leagues, good enough to do it at the Olympic level, the Googles, the Facebooks, even the RBCs, you know, across that whole spectrum, right? How do you convince those super valuable people to invest their time coaching somebody younger, somebody less experienced? And that was mentorship. That was one-on-one, income shared. That’s why ultimately we decided not to do a bootcamp. Q: Has the data science market has changed much over the past four years? It’s changed a lot. Actually, maybe I’ll go back to my foolhardy days 2015, dropping out of grad school and going into this. At the time, I had a couple of friends who’d made the transition in 2015. The way they made the transition was they had a background in some kind of quantitative STEM, math, physics, something like that. And then they basically just learned two things. They learned basic Python and they learned scikit-learn, numpy, pandas. That was it. No Docker, no AWS, no Heroku, no Flask, no nothing. That was enough back then. And the reason it was enough is data science was in the wild west phase. So, imagine all the companies that were looking to hire data scientists because the hype was in. We knew companies that said like, we have to hire data scientists because our investors say we should hire data scientists. That’s a bad call. You should never do that, but it was happening. And so you could pretty much get hired with a bare minimum of skills in 2015. Around 2017, things started to mature. You started to see people asking for more and more as people started to realize that we’ve got to start transitioning from talking about data science as this magical thing — it’s going to help us predict the future and do all kinds of cool stuff — it’s all AI. We now needed to start getting actual business value from this because it had been two years. So at that stage, what people started asking for more of was stuff like, can you write clean modular code? Are you able to leverage good practical visualization libraries, things like Seabourn and matplotlib? You were still mostly seeing requirements for libraries expand. It wasn’t like the software engineering side had yet come into its own. Now you’re starting to see that companies will ask you, not like what Kaggle competitions have you played in, but what software engineering do you know, what data pipelines can you set up? So it’s a lot more about implementation now. It’s much less theoretical and that’s just because of the natural course of evolution of the field and it’s still changing today. And when you have a setup where you only get paid when somebody gets hired, we need everybody to win to make this work. So you become really focused on tracking the changes in the job market and the changes in requirements. The direction things are going in now is actually really interesting, and there are a couple of different trends emerging now. The data science job description is kind of forking out. You’ve got, on the one hand, almost like a software engineer who also does data science. And then the other one is a product-focused person who’s data-savvy. So, product-focused people answer questions like, what should we build next? What do our users want and how can we use data to inform those decisions? A lot of that is now becoming modeling-oriented and you’re seeing more hyperparameter tuning, more predictive modeling, more unsupervised learning, too. So the role is sort of morphing into those two directions. It’s still hard to tell where that’s going. Q: Do you have any advice for people who want to get into data science? I think people are going to expect a technical answer to this question, but I think that the answer begins with something very deeply nontechnical. And that’s habit building. Before you can dive in, say, MOOCs, you need to be aware of this. MOOCs have completion rates of around 5 to 15%. So the average person who buys an intro to data science course on Udacity is not going to finish it. We call MOOCs aspirational purchases. Basically, it’s for somebody wants to be the kind of person who would complete a MOOC, but they actually stop short of doing it. It’s like a new year’s resolution. So the first thing that you need to do if you’re trying to break in, is recognize that impulse in yourself. It’s deep — it’s ingrained in every human being. All of us start books and don’t finish them. All of us say that we’re going to get in shape and then we stop after January 14th or whatever. Recognizing that that’s the reality, the question then becomes, how do you actually start building habits? There’s a pretty famous book called Atomic Habits by James Clear. Russell, who’s our CTO, is really into habit building, too. SharpestMinds is basically big into the culture of habit formation. It’s a big part of what we focus on. But the bottom line is to pick very like small incremental goals that you can actually achieve and then give yourself credit for accomplishing them. So don’t tell yourself that you’re going to knock out a whole zero-to-hero Python transition in like three months. Instead, tell yourself you’re going to build something really simple and straight forward and start to execute on it. The whole habit formation thing is a huge space and I don’t want to dwell on it too much, but it’s really worth looking into. If I’m going to give a more technical answer, I personally believe Jupiter notebooks are a great way to start. Then, libraries like NumPy, pandas, and scikit-learn are the key ones you’re going to want to know. And don’t try to learn just by looking up APIs or looking up scikit-learn docs and reading them. Try to look at Kaggle competitions, look at blog posts and just replicate them. At first, you don’t have to know what everything — what every little piece is doing. With more practice and more experience, you’ll get to unpack things. But the goal is to just get your hands dirty. Don’t be shy to hit shift + enter and see what comes out of your project. That’d be my main advice. I will say there’s a great MOOC called fast.ai by Jeremy Howard, who was the president of Kaggle for a while. Kaggle is a big competition website in data science, and I think he was one of their top rank competitors for a long time. He founded a company called Enlitic. They’re a med-tech company that’s massive in computer vision. Anyway, he’s a really, really good explainer. Fast.ai has a great course on deep learning and machine learning. Every year I go over them again just to stay fresh. It’s actually one of the main things I do to stay on top of like the theory and implementation side. I’d recommend checking that out for sure. Q: What was your experience like at Y Combinator? It was awesome. It’s so hard to summarize in one line or two. But I guess what I would say is, YC is transformative for a couple of different reasons. It’s an amazing community and the service they offer is amazing. What’s really weird about it is that the advice they give on the inside is exactly the same as the advice that they give on the outside. If you read Paul Graham’s essays, for example, or listen to their podcasts, you’re consuming the same advice they give to everyone. That actually really threw us off at first because there was no magic. I think like a lot of companies, we expected genuinely that we would see magic when we got into YC. They’d open a Pandora’s box and all of a sudden we’d be like, that’s the trick, that’s the hack. We were looking for the hack, and there is no hack. And in a weird way, that’s actually the biggest hack. It’s realizing that, hey, it’s just hustle. You just have to do it at a certain point. Having the YC partners there just remind you over and over again and say, hey, do you remember that advice I gave you yesterday? I was f’ing serious about that advice. I don’t know what you’ve been doing. Basically, just having them tell you that you should be executing on that even though you already knew it. That extra little push makes a big difference and eventually you start to internalize it. And I think that was the biggest take home for us from the experience. Thank you for reading this post! If you want to hear the full audio version, you can listen to the full episode on the Towards Data Science podcast. Towards Data Science A Medium publication sharing concepts, ideas, and codes. Follow 385 Data Science Machine Learning Startup Tds Podcast Tds Video 385 claps Written by YK Sugi Follow YouTuber at CS Dojo / Podcaster at Towards Data Science Follow Towards Data Science Follow A Medium publication sharing concepts, ideas, and codes. Follow See responses (2) More From Medium More from Towards Data Science More from Towards Data Science from sklearn import * Conor Lazarou in Towards Data Science Mar 22 · 9 min read 2.5K More from Towards Data Science More from Towards Data Science Top 3 Python Functions You Don’t Know About (Probably) Dario Rade?i? in Towards Data Science Mar 14 · 4 min read 4.3K More from Towards Data Science More from Towards Data Science Don’t learn machine learning Caleb Kaiser in Towards Data Science Mar 19 · 4 min read 2.4K Discover MediumWelcome to a place where words matter. On Medium, smart voices and original ideas take center stage - with no ads in sight. Watch Make Medium yoursFollow all the topics you care about, and we’ll deliver the best stories for you to your homepage and inbox. Explore Become a memberGet unlimited access to the best stories on Medium — and support writers while you’re at it. Just $5/month. Upgrade AboutHelpLegal
