https://ipython.readthedocs.io/en/stable/config/extensions/storemagic.html
storemagic — IPython 7.13.0 documentation IPython stable IPython Documentation Overview What’s new in IPython Installation Tutorial Configuration and customization Configuring IPython Extending and integrating with IPython IPython extensions Getting extensions Using extensions Writing extensions Extensions bundled with IPython Integrating your objects with IPython Defining custom magics Accessing user namespace and local scope Complete Example Mime Renderer Extensions Custom input transformation IPython Events Integrating with GUI event loops Developer’s guide for third party tools and libraries Guide for IPython core Developers The IPython API IPython Sphinx Directive About IPython IPython Docs » Configuration and customization » IPython extensions » storemagic Edit on GitHub Important This documentation covers IPython versions 6.0 and higher. Beginning with version 6.0, IPython stopped supporting compatibility with Python versions lower than 3.3 including all versions of Python 2.7. If you are looking for an IPython version compatible with Python 2.7, please use the IPython 5.x LTS release and refer to its documentation (LTS is the long term support release). storemagic¶ %store magic for lightweight persistence. Stores variables, aliases and macros in IPython’s database. To automatically restore stored variables at startup, add this to your ipython_config.py file: c.StoreMagics.autorestore = True
 StoreMagics.store(parameter_s='')¶ Lightweight persistence for python variables. Example: In [1]: l = ['hello',10,'world']
In [2]: %store l
In [3]: exit

(IPython session is closed and started again...)

ville@badger:~$ ipython
In [1]: l
NameError: name 'l' is not defined
In [2]: %store -r
In [3]: l
Out[3]: ['hello', 10, 'world']
 Usage: %store - Show list of all variables and their current values %store spam bar - Store the current value of the variables spam and bar to disk %store -d spam - Remove the variable and its value from storage %store -z - Remove all variables from storage %store -r - Refresh all variables, aliases and directory history from store (overwrite current vals) %store -r spam bar - Refresh specified variables and aliases from store (delete current val) %store foo >a.txt - Store value of foo to new file a.txt %store foo >>a.txt - Append value of foo to file a.txt It should be noted that if you change the value of a variable, you need to %store it again if you want to persist the new value. Note also that the variables will need to be pickleable; most basic python types can be safely %store’d. Also aliases can be %store’d across sessions. To remove an alias from the storage, use the %unalias magic. Next Previous © Copyright The IPython Development Team Revision d0b25504. Built with Sphinx using a theme provided by Read the Docs. Read the Docs v: stable Versions latest stable 7.13.0 7.12.0 7.11.1 7.10.2 7.9.0 7.8.0 7.7.0 7.6.1 7.5.0 7.4.0 7.3.0 7.2.0 7.1.1 6.5.0 6.x 5.x 4.x 3.x 2.x 1.x Downloads pdf html epub On Read the Docs Project Home Builds Free document hosting provided by Read the Docs.
