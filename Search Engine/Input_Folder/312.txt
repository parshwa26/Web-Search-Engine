https://towardsdatascience.com/a-quick-guide-to-relational-algebra-operators-in-dbms-1ff2ddecaad7?source=user_profile---------5-----------------------
A Quick Guide to Relational Algebra Operators in DBMS Sign in Data Science Machine Learning Programming Visualization AI Video About Contribute A Quick Guide to Relational Algebra Operators in DBMS A quick introduction to relational algebra operators with examples Vijini Mallawaarachchi Follow Mar 15 · 5 min read Database management systems (DBMS) must have a query language so that the users can access the data stored in the database. Relational algebra (RA) is considered as a procedural query language where the user tells the system to carry out a set of operations to obtain the desired results. i.e. The user tells what data should be retrieved from the database and how to retrieve it. In this article, I will give a brief introduction to relational algebra and go through a few operations with examples and PostgreSQL commands. What is Relational Algebra? Fig 1. Basic terms regarding a relational database According to Wikipedia, Relational algebra is a family of algebras with a well-founded semantics used for modelling the data stored in relational databases, and defining queries on it. RA provides a theoretical foundation for relational databases. I assume that you know the basic terms used in relational databases. Now pay attention to the terms relation, attribute and tuple as denoted in Figure 1. In this article, we will go through the following RA operators. Projection Selection Rename Cross product Natural join Conditional join Union Intersection Set difference We will consider the following 3 tables as examples to explain these RA operations. We have a Member table (details about members), Book table (details about books) and Borrow table (details about borrowed books). Fig 2. Three example relations 1. Projection (?) Projection is used to select the required columns of data from a relation. Note that projection removes duplicate data (tuples). Query: Member IDs of members who have borrowed books. Query: Member IDs of members and the Book IDs of the books they have borrowed books. 2. Selection (?) Selection is used to select the required tuples of data from a relation. During selection, we can specify certain conditions that the data must satisfy. Query: Details of the members who were born on 21/10/1997. 3. Rename (?) Rename operation allows renaming a certain output relation. Query: Rename the Member relation as LibraryMemebr. 4. Cross product (?) Cross product is used to combine data from two different relations into one combined relation. If we consider two relations; A with n tuples and B with m tuples, A ? B will consist of n.m tuples. Query: Member ? Borrow Note that Member relation has 5 tuples and Burrow relation has 5 tuples. Hence Member ? Borrow has 5?5 = 25 tuples. 5. Natural join (?) Natural join between two or more relations will result in all the combination of tuples where they have equal values for the common attribute. Query: Member ? Borrow Note that the common attribute in this example is Member ID. 6. Conditional join (?c) Conditional join is similar to the natural join but in the conditional join, we can specify any join condition with the operators greater than, less than, equal or not equal. You can combine conditions as well with AND (^) and OR (v) operators. Query: Borrowing details of members who have burrowed more than one book. 7. Union (?) The union operation in RA is very similar to that of set theory. However, for the union of two relations, both the relations must have the same set of attributes. Query: Book IDs of the books borrowed by Charlie and Mike. 8. Intersection (?) The intersection operation in RA is very similar to that of set theory. However, for the intersection of two relations, both the relations must have the same set of attributes. Query: Member IDs of the members who have borrowed both the books “Fences” and “Inheritance”. 9. Set difference (-) The set difference operation in RA is very similar to that of set theory. However, for the set difference between two relations, both the relations must have the same set of attributes. Query: Member IDs of the members who have never borrowed books. R1 will return details of all the members Alice, Bob, Charlie, Mike and Katie. R2 will return details of Alice, Charlie, Mike and Katie as they have borrowed books. When we take the difference between R1 and R2, the details of Bob will be returned. Final Thoughts The PostgreSQL commands to create these relations and the queries which demonstrate each of these RA operators can be found in the SQL Fiddle link given below. You run them and play around to see what happens. ? SQL Fiddle | A tool for easy online testing and sharing of database problems and their solutions. Schema Panel Use this panel to setup your database problem (CREATE TABLE, INSERT, and whatever other statements you… sqlfiddle.com Moreover, if you want to try out the commands on your machine, you can download them from the gists provided in the links below. Relational algebra operators seem to be quite simple, but they become very powerful when representing complex queries and during query optimisation (will be discussed in a future article). Hope you found this article useful. I would love to hear your thoughts. ? Thank you for reading! Cheers! ? Towards Data Science A Medium publication sharing concepts, ideas, and codes. Follow 39 Database Sql Programming Data Science Computer Science 39 claps Written by Vijini Mallawaarachchi Follow PhD Student at Australian National University | Loves Bioinformatics, Data Science, Music & Astronomy Follow Towards Data Science Follow A Medium publication sharing concepts, ideas, and codes. Follow Write the first response More From Medium More from Towards Data Science More from Towards Data Science from sklearn import * Conor Lazarou in Towards Data Science Mar 22 · 9 min read 2.5K More from Towards Data Science More from Towards Data Science Top 3 Python Functions You Don’t Know About (Probably) Dario Rade?i? in Towards Data Science Mar 14 · 4 min read 4.3K More from Towards Data Science More from Towards Data Science Don’t learn machine learning Caleb Kaiser in Towards Data Science Mar 19 · 4 min read 2.4K Discover MediumWelcome to a place where words matter. On Medium, smart voices and original ideas take center stage - with no ads in sight. Watch Make Medium yoursFollow all the topics you care about, and we’ll deliver the best stories for you to your homepage and inbox. Explore Become a memberGet unlimited access to the best stories on Medium — and support writers while you’re at it. Just $5/month. Upgrade AboutHelpLegal
